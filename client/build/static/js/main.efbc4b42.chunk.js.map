{"version":3,"sources":["actions/logActions.js","actions/types.js","components/layouts/SearchBar.js","components/logs/LogItem.js","components/layouts/Preloader.js","components/logs/Logs.js","components/layouts/AddBtn.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["getLogs","dispatch","a","setLoading","fetch","res","json","data","type","payload","response","connect","searchLogs","text","useRef","onKeyUp","e","keyCode","current","value","temp","target","style","marginBottom","className","id","placeholder","ref","htmlFor","onClick","deleteLog","method","setCurrent","log","href","attention","message","tech","format","date","_id","M","toast","html","Preloader","state","logs","loading","useEffect","length","map","key","AddBtn","getTechs","techs","t","firstName","lastName","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","onChange","disabled","checked","newLog","Math","floor","random","Date","updateLog","updLog","tempID","addTech","setFirstName","setLastName","deleteTech","initialState","error","combineReducers","action","filter","regex","RegExp","match","console","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.efbc4b42.chunk.js","sourcesContent":["import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  UPDATE_LOG,\r\n  SEARCH_LOGS,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT\r\n} from './types';\r\n\r\n// Gets logs from server\r\nexport const getLogs = () => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch('/api/logs');\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_LOGS,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response\r\n    });\r\n  }\r\n};\r\n//\r\n\r\n// Add new log\r\nexport const addLog = log => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch('/api/logs', {\r\n      method: 'POST',\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: ADD_LOG,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response\r\n    });\r\n  }\r\n};\r\n//\r\n\r\n// Delete log from server\r\nexport const deleteLog = id => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    await fetch(`/api/logs/${id}`, {\r\n      method: 'DELETE'\r\n    });\r\n\r\n    dispatch({\r\n      type: DELETE_LOG,\r\n      payload: id\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response\r\n    });\r\n  }\r\n};\r\n//\r\n\r\n// Update log on server\r\nexport const updateLog = updLog => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`api/logs/${updLog.tempID}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(updLog),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: UPDATE_LOG,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response\r\n    });\r\n  }\r\n};\r\n//\r\n\r\n// Search logs\r\nexport const searchLogs = text => async dispatch => {\r\n  dispatch({ type: SEARCH_LOGS, payload: text });\r\n  // try {\r\n  //   setLoading();\r\n\r\n  //   const res = await fetch(`api/logs`);\r\n  //   const data = await res.json();\r\n\r\n  //   dispatch({\r\n  //     type: SEARCH_LOGS,\r\n  //     payload: data\r\n  //   });\r\n  // } catch (err) {\r\n  //   dispatch({\r\n  //     type: LOGS_ERROR,\r\n  //     payload: err.response\r\n  //   });\r\n  // }\r\n};\r\n//\r\n\r\n// Set current log\r\nexport const setCurrent = log => {\r\n  return {\r\n    type: SET_CURRENT,\r\n    payload: log\r\n  };\r\n};\r\n//\r\n\r\n// Clear current log\r\nexport const clearCurrent = () => {\r\n  return {\r\n    type: CLEAR_CURRENT\r\n  };\r\n};\r\n//\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING\r\n  };\r\n};\r\n//\r\n","export const GET_LOGS = 'GET_LOGS';\r\nexport const ADD_LOG = 'ADD_LOG';\r\nexport const DELETE_LOG = 'DELETE_LOG';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const UPDATE_LOG = 'UPDATE_LOG';\r\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const LOGS_ERROR = 'LOGS_ERROR';\r\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\r\nexport const GET_TECHS = 'GET_TECHS';\r\nexport const ADD_TECH = 'ADD_TECH';\r\nexport const DELETE_TECH = 'DELETE_TECH';\r\nexport const TECHS_ERROR = 'TECHS_ERROR';\r\n","import React, { useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { searchLogs, getLogs } from '../../actions/logActions';\r\n\r\nconst SearchBar = ({ searchLogs, getLogs }) => {\r\n  const text = useRef('');\r\n\r\n  const onClick = e => {\r\n    text.current.value = '';\r\n    getLogs();\r\n  };\r\n\r\n  const onKeyUp = async e => {\r\n    if (e.keyCode === 8) {\r\n      if (text.current.value !== '') {\r\n        getLogs();\r\n      }\r\n      let temp = e.target.value;\r\n      await getLogs();\r\n      searchLogs(temp);\r\n    } else if (text.current.value !== '') {\r\n      searchLogs(e.target.value);\r\n    } else {\r\n      getLogs();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav style={{ marginBottom: '30px' }} className='blue'>\r\n      <div className='nav-wrapper'>\r\n        <form>\r\n          <div className='input-field'>\r\n            <input\r\n              id='search'\r\n              type='search'\r\n              placeholder='Search Logs...'\r\n              ref={text}\r\n              onKeyUp={onKeyUp}\r\n            />\r\n            <label className='label-icon' htmlFor='search'>\r\n              <i className='material-icons'>search</i>\r\n            </label>\r\n            <i className='material-icons' onClick={onClick}>\r\n              close\r\n            </i>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  searchLogs: PropTypes.func.isRequired,\r\n  getLogs: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { searchLogs, getLogs })(SearchBar);\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteLog, setCurrent } from '../../actions/logActions';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\r\n  const onDelete = () => {\r\n    deleteLog(log._id);\r\n    M.toast({ html: 'Log Deleted' });\r\n  };\r\n  return (\r\n    <li className='collection-item'>\r\n      <div>\r\n        <a\r\n          href='#edit-log-modal'\r\n          className={`modal-trigger ${\r\n            log.attention ? 'red-text' : 'green-text'\r\n          }`}\r\n          onClick={() => setCurrent(log)}\r\n        >\r\n          {log.message}\r\n        </a>\r\n        <br />\r\n        <span className='grey-text'>\r\n          <span className='black-text'>ID #{log.id}</span> last updated by{' '}\r\n          <span className='black-text'>{log.tech}</span> on{' '}\r\n          <Moment format='MMM Do YYYY, h:mm:ss a'>{log.date}</Moment>\r\n        </span>\r\n        <a href='#!' onClick={onDelete} className='secondary-content'>\r\n          <i className='material-icons grey-text'>delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nLogItem.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n  deleteLog: PropTypes.func.isRequired,\r\n  setCurrent: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteLog, setCurrent })(LogItem);\r\n","import React from 'react';\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className='progress blue lighten-4'>\r\n      <div className='indeterminate blue'></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LogItem from './LogItem';\r\nimport Preloader from '../layouts/Preloader';\r\nimport PropTypes from 'prop-types';\r\nimport { getLogs } from '../../actions/logActions';\r\n\r\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\r\n  useEffect(() => {\r\n    getLogs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (loading || logs === null) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <ul className='collection with-header'>\r\n      <li className='collection-header'>\r\n        <h4 className='center'>System Logs</h4>\r\n      </li>\r\n      {!loading && logs.length === 0 ? (\r\n        <p className='center'>No logs to show...</p>\r\n      ) : (\r\n        logs.map(log => <LogItem log={log} key={log.id} />)\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nLogs.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n  getLogs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  log: state.log\r\n});\r\n\r\nexport default connect(mapStateToProps, { getLogs })(Logs);\r\n","import React from 'react';\r\n\r\nconst AddBtn = () => {\r\n  return (\r\n    <div className='fixed-action-btn'>\r\n      <a\r\n        href='#add-log-modal'\r\n        className='btn-floating btn-large blue darken-2 modal-trigger'\r\n      >\r\n        <i className='large material-icons'>add</i>\r\n      </a>\r\n      <ul>\r\n        <li>\r\n          <a\r\n            href='#tech-list-modal'\r\n            className='btn-floating green modal-trigger'\r\n          >\r\n            <i className='material-icons'>person</i>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href='#add-tech-modal' className='btn-floating red modal-trigger'>\r\n            <i className='material-icons'>person_add</i>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBtn;\r\n","import {\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  SET_LOADING,\r\n  TECHS_ERROR\r\n} from './types';\r\n\r\n// Gets techs from server\r\nexport const getTechs = () => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch('api/techs');\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_TECHS,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response\r\n    });\r\n  }\r\n};\r\n//\r\n\r\n// Add tech to server\r\nexport const addTech = tech => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch('api/techs', {\r\n      method: 'POST',\r\n      body: JSON.stringify(tech),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: ADD_TECH,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response\r\n    });\r\n  }\r\n};\r\n//\r\n\r\n// Delete tech from server\r\nexport const deleteTech = id => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    await fetch(`api/techs/${id}`, {\r\n      method: 'DELETE'\r\n    });\r\n\r\n    dispatch({\r\n      type: DELETE_TECH,\r\n      payload: id\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response\r\n    });\r\n  }\r\n};\r\n//\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING\r\n  };\r\n};\r\n//\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getTechs } from '../../actions/techActions';\r\n\r\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    !loading &&\r\n    techs !== null &&\r\n    techs.map(t => (\r\n      <option key={t.id} value={`${t.firstName} ${t.lastName}`}>\r\n        {t.firstName} {t.lastName}\r\n      </option>\r\n    ))\r\n  );\r\n};\r\n\r\nTechSelectOptions.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  getTechs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tech: state.tech\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTechs })(TechSelectOptions);\r\n","import React, { useState } from 'react';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addLog } from '../../actions/logActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst AddLogModal = ({ addLog }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState('');\r\n\r\n  const onSubmit = () => {\r\n    if (message === '' || tech === '') {\r\n      M.toast({ html: 'Please enter a message and tech' });\r\n    } else {\r\n      const newId = Math.floor(Math.random() * 1000000);\r\n      const newLog = {\r\n        id: newId,\r\n        message,\r\n        attention,\r\n        tech,\r\n        data: new Date()\r\n      };\r\n\r\n      addLog(newLog);\r\n\r\n      M.toast({ html: `Log added by ${tech}` });\r\n\r\n      // Clear Fields\r\n      setMessage('');\r\n      setTech('');\r\n      setAttention(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='add-log-modal' className='modal' style={modalStyle}>\r\n      <div className='modal-content'>\r\n        <h4>Enter System Log</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='message'\r\n              value={message}\r\n              onChange={e => setMessage(e.target.value)}\r\n            />\r\n            <label htmlFor='message' className='active'>\r\n              Log Message\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <select\r\n              name='tech'\r\n              value={tech}\r\n              className='browser-default'\r\n              onChange={e => setTech(e.target.value)}\r\n            >\r\n              <option value='' disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type='checkbox'\r\n                  className='filled-in'\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={e => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='modal-close waves-effect blue btn'\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddLogModal.propTypes = {\r\n  addLog: PropTypes.func.isRequired\r\n};\r\n\r\nconst modalStyle = {\r\n  width: '75%',\r\n  height: '75%'\r\n};\r\n\r\nexport default connect(null, { addLog })(AddLogModal);\r\n","import React, { useState, useEffect } from 'react';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport { updateLog } from '../../actions/logActions';\r\n\r\nconst EditLogModal = ({ current, updateLog }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (current) {\r\n      setMessage(current.message);\r\n      setAttention(current.attention);\r\n      setTech(current.tech);\r\n    }\r\n  }, [current]);\r\n\r\n  const onSubmit = () => {\r\n    if (message === '' || tech === '') {\r\n      M.toast({ html: 'Please enter a message and tech' });\r\n    } else {\r\n      const updLog = {\r\n        tempID: current._id,\r\n        message,\r\n        attention: JSON.stringify(attention),\r\n        tech,\r\n        date: new Date()\r\n      };\r\n\r\n      updateLog(updLog);\r\n      M.toast({ html: `Log updated by ${tech}` });\r\n\r\n      // Clear Fields\r\n      setMessage('');\r\n      setTech('');\r\n      setAttention(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='edit-log-modal' className='modal' style={modalStyle}>\r\n      <div className='modal-content'>\r\n        <h4>Enter System Log</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='message'\r\n              value={message}\r\n              onChange={e => setMessage(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <select\r\n              name='tech'\r\n              value={tech}\r\n              className='browser-default'\r\n              onChange={e => setTech(e.target.value)}\r\n            >\r\n              <option value='' disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type='checkbox'\r\n                  className='filled-in'\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={e => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='modal-close waves-effect blue btn'\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: '75%',\r\n  height: '75%'\r\n};\r\n\r\nEditLogModal.propTypes = {\r\n  current: PropTypes.object,\r\n  updateLog: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  current: state.log.current\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateLog })(EditLogModal);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addTech } from '../../actions/techActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst AddTechModal = ({ addTech }) => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n\r\n  const onSubmit = () => {\r\n    if (firstName === '' || lastName === '') {\r\n      M.toast({ html: 'Please enter the first and last name' });\r\n    } else {\r\n      const id = Math.floor(Math.random() * 1000000);\r\n      addTech({\r\n        id,\r\n        firstName,\r\n        lastName\r\n      });\r\n\r\n      M.toast({ html: `${firstName} ${lastName} added to tech list` });\r\n\r\n      // Clear Fields\r\n      setFirstName('');\r\n      setLastName('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='add-tech-modal' className='modal'>\r\n      <div className='modal-content'>\r\n        <h4>New Technician</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='firstName'\r\n              value={firstName}\r\n              onChange={e => setFirstName(e.target.value)}\r\n            />\r\n            <label htmlFor='firstName' className='active'>\r\n              First Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='lastName'\r\n              value={lastName}\r\n              onChange={e => setLastName(e.target.value)}\r\n            />\r\n            <label htmlFor='lastName' className='active'>\r\n              Last Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='modal-close waves-effect blue btn'\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddTechModal.propTypes = {\r\n  addTech: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addTech })(AddTechModal);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteTech } from '../../actions/techActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst TechItem = ({ tech: { _id, firstName, lastName }, deleteTech }) => {\r\n  const onDelete = () => {\r\n    deleteTech(_id);\r\n    M.toast({ html: 'Tech deleted' });\r\n  };\r\n\r\n  return (\r\n    <li className='collection-item'>\r\n      <div>\r\n        {firstName} {lastName}\r\n        <a href='#!' className='secondary-content' onClick={onDelete}>\r\n          <i className='material-icons grey-text'>delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nTechItem.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  deleteTech: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteTech })(TechItem);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport TechItem from './TechItem';\r\nimport { getTechs } from '../../actions/techActions';\r\n\r\nconst TechListModal = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div id='tech-list-modal' className='modal'>\r\n      <div className='modal-content'>\r\n        <h4>Technician List</h4>\r\n        <ul className='collection'>\r\n          {!loading &&\r\n            techs !== null &&\r\n            techs.map(tech => <TechItem tech={tech} key={tech.id} />)}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTechListModal.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  getTechs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tech: state.tech\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTechs })(TechListModal);\r\n","import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  UPDATE_LOG,\r\n  SEARCH_LOGS,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  logs: null,\r\n  current: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_LOG:\r\n      return {\r\n        ...state,\r\n        logs: [action.payload, ...state.logs],\r\n        loading: false\r\n      };\r\n    case DELETE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.filter(log => log._id !== action.payload),\r\n        loading: false\r\n      };\r\n    case UPDATE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.map(log =>\r\n          log._id === action.payload._id ? action.payload : log\r\n        )\r\n      };\r\n    case SEARCH_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.filter(log => {\r\n          const regex = new RegExp(`${action.payload}`, 'gi');\r\n          return (\r\n            log.tech.match(regex) ||\r\n            log.id.match(regex) ||\r\n            log.message.match(regex)\r\n          );\r\n        })\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case LOGS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  SET_LOADING,\r\n  TECHS_ERROR\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  techs: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TECHS:\r\n      return {\r\n        ...state,\r\n        techs: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_TECH:\r\n      return {\r\n        ...state,\r\n        techs: [...state.techs, action.payload],\r\n        loading: false\r\n      };\r\n    case DELETE_TECH:\r\n      return {\r\n        ...state,\r\n        techs: state.techs.filter(tech => tech._id !== action.payload),\r\n        loading: false\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case TECHS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport logReducer from './logReducer';\r\nimport techReducer from './techReducer';\r\n\r\nexport default combineReducers({\r\n  log: logReducer,\r\n  tech: techReducer\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from 'react';\nimport SearchBar from './components/layouts/SearchBar';\nimport Logs from './components/logs/Logs';\nimport AddBtn from './components/layouts/AddBtn';\nimport AddLogModal from './components/logs/AddLogModal';\nimport EditLogModal from './components/logs/EditLogModal';\nimport AddTechModal from './components/techs/AddTechModal';\nimport TechListModal from './components/techs/TechListModal';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport './App.css';\n\nconst App = () => {\n  useEffect(() => {\n    // Init Materialize JS\n    M.AutoInit();\n  });\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <SearchBar />\n        <div className='container'>\n          <AddBtn />\n          <AddLogModal />\n          <EditLogModal />\n          <AddTechModal />\n          <TechListModal />\n          <Logs />\n        </div>\n      </Fragment>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}